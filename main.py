
import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.enums.parse_mode import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv
from google_sheets import append_row

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", 0))

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class Form(StatesGroup):
    housing = State()
    improve = State()
    type = State()
    city = State()
    budget = State()
    search = State()
    mortgage = State()
    time = State()
    name = State()
    phone = State()
    contact = State()
    callback_time = State()
    sos = State()

# –ö–Ω–æ–ø–∫–∏
yes_no_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–î–∞")], [KeyboardButton(text="–ù–µ—Ç")]],
    resize_keyboard=True
)

contact_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü–æ–∑–≤–æ–Ω–∏—Ç—å")],
        [KeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä")],
        [KeyboardButton(text="Email")],
        [KeyboardButton(text="–ü–æ–¥–∞—Ä–æ–∫")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

@dp.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä—ë–º —Ç–µ–±–µ –∏–¥–µ–∞–ª—å–Ω—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å. –û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ, –∏ –ø–æ–ª—É—á–∏—à—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ")
    await message.answer("1. –ì–¥–µ —Ç—ã –∂–∏–≤—ë—à—å —Å–µ–π—á–∞—Å? (—Å–≤–æ—è, —Å—ä—ë–º–Ω–∞—è, —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏, —Å –¥–µ–≤—É—à–∫–æ–π/–ø–∞—Ä–Ω–µ–º –∏ —Ç.–¥.)")
    await state.set_state(Form.housing)

@dp.message(Form.housing)
async def step_housing(message: Message, state: FSMContext):
    await state.update_data(housing=message.text)
    await message.answer("2. –•–æ—Ç–µ–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å —É—Å–ª–æ–≤–∏—è?")
    await state.set_state(Form.improve)

@dp.message(Form.improve)
async def step_improve(message: Message, state: FSMContext):
    await state.update_data(improve=message.text)
    await message.answer("3. –ö–∞–∫–æ–π —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? (–ö–≤–∞—Ä—Ç–∏—Ä–∞, –î–æ–º, –£—á–∞—Å—Ç–æ–∫...)")
    await state.set_state(Form.type)

@dp.message(Form.type)
async def step_type(message: Message, state: FSMContext):
    await state.update_data(type=message.text)
    await message.answer("4. –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ/—Ä–µ–≥–∏–æ–Ω–µ?")
    await state.set_state(Form.city)

@dp.message(Form.city)
async def step_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("5. –ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç? (–ï—Å—Ç—å –Ω–µ–º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥, –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª –∑–∞ –æ–¥–Ω–æ–≥–æ –∏ –±–æ–ª—å—à–µ –¥–≤—É—Ö, –ï—Å—Ç—å –¥–µ–Ω—å–≥–∏ —Å –ø—Ä–æ–¥–∞–∂–∏, –†–∞—Å–ø–∏—à–∏ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º)")
    await state.set_state(Form.budget)

@dp.message(Form.budget)
async def step_budget(message: Message, state: FSMContext):
    await state.update_data(budget=message.text)
    await message.answer("6. –£–∂–µ –∏—â–µ—Ç–µ –∂–∏–ª—å—ë? (–î–∞, –ò–Ω–æ–≥–¥–∞, –ü–æ–∫–∞ –¥—É–º–∞—é)")
    await state.set_state(Form.search)

@dp.message(Form.search)
async def step_search(message: Message, state: FSMContext):
    await state.update_data(search=message.text)
    await message.answer("7. –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∏–ø–æ—Ç–µ–∫—É?")
    await state.set_state(Form.mortgage)

@dp.message(Form.mortgage)
async def step_mortgage(message: Message, state: FSMContext):
    await state.update_data(mortgage=message.text)
    await message.answer("8. –ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–∫—É–ø–∫—É?")
    await state.set_state(Form.time)

@dp.message(Form.time)
async def step_time(message: Message, state: FSMContext):
    await state.update_data(time=message.text)
    await message.answer("9. –í–∞—à–µ –§–ò–û:")
    await state.set_state(Form.name)

@dp.message(Form.name)
async def step_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("10. –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:")
    await state.set_state(Form.phone)

@dp.message(Form.phone)
async def step_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("11. –ö–∞–∫ —Å –≤–∞–º–∏ –ª—É—á—à–µ —Å–≤—è–∑–∞—Ç—å—Å—è?", reply_markup=contact_kb)
    await state.set_state(Form.contact)

@dp.message(Form.contact)
async def step_contact(message: Message, state: FSMContext):
    await state.update_data(contact=message.text)
    await message.answer("12. –ö–æ–≥–¥–∞ —Å –≤–∞–º–∏ —É–¥–æ–±–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è?")
    await state.set_state(Form.callback_time)

@dp.message(Form.callback_time)
async def step_callback_time(message: Message, state: FSMContext):
    await state.update_data(callback_time=message.text)
    await message.answer("–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –°–ï–ô–ß–ê–° ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ SOS, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!", reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="SOS")], [KeyboardButton(text="–ù–µ—Ç, –≤—Å—ë –æ–∫")]],
        resize_keyboard=True
    ))
    await state.set_state(Form.sos)

@dp.message(Form.sos)
async def step_sos(message: Message, state: FSMContext):
    data = await state.get_data()
    data["sos"] = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets
    row = [
        message.date.isoformat(), data.get("name"), data.get("phone"),
        data.get("housing"), data.get("improve"), data.get("type"),
        data.get("city"), data.get("budget"), data.get("search"),
        data.get("mortgage"), data.get("time"), data.get("contact"),
        data.get("callback_time"), data.get("sos")
    ]
    append_row(row)

    await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
    if data["sos"].lower() == "sos":
        await message.answer("üîî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!")
        await bot.send_message(ADMIN_ID, f"üö® SOS –æ—Ç {data.get('name')} {data.get('phone')}")

    await state.clear()

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
